{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","searchResults","deletePerson","map","person","key","name","number","onClick","Filter","newSearchName","handleSearchChange","type","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","baseUrl","axios","get","then","response","data","newObject","post","recordId","updatedRecord","put","id","url","delete","Notification","messageType","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearchName","setSearchResults","notificationMessage","setNotificationMessage","setMessageType","useEffect","personService","allPersons","results","filter","toLowerCase","includes","event","target","preventDefault","personObject","find","window","confirm","personToUpdate","setTimeout","catch","error","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df324c96.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({searchResults, deletePerson}) => {\n  return (\n    <ul>\n        {searchResults.map(person =>\n          <li key={person.name}>\n            {person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\n          </li>\n        )}\n      </ul>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({newSearchName, handleSearchChange}) => {\n  return (\n    <div>\n      <p>\n        filter shown with <input\n          type=\"search\"\n          value={newSearchName}\n          onChange={handleSearchChange}\n        />\n      </p>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ( {addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange}) => {\n  return (\n    <>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input\n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (recordId, updatedRecord)  => {\n  const request = axios.put(`${baseUrl}/${recordId}`, updatedRecord)\n  return request.then(response => response.data)\n}\n\nconst deleteRecord = id => {\n  const url = `${baseUrl}/${id}`\n  const request = axios.delete(url)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteRecord }","import React from 'react'\n\nconst Notification = ( {messageType, message} ) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {message}\n    </div>\n  )\n\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Persons from'./components/Persons';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearchName, setNewSearchName ] = useState('')\n  const [ searchResults, setSearchResults ] = useState([])\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState(\"success\")\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.find( person => { return person.name === personObject.name } ) ) {\n      window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n\n      const personToUpdate = persons.find( person => { return person.name === personObject.name } )\n      personService\n      .update(personToUpdate.id, personObject)\n      .then(response => personService\n        .getAll()\n        .then(allPersons => {\n          setPersons(allPersons)\n        }),\n\n        setNewName(''),\n        setNewNumber(''),\n        setNotificationMessage(`Changed number for ${personObject.name}`),\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      )\n      .catch(error => {\n        setMessageType(\"error\")\n        setNotificationMessage(`Information for ${personObject.name} has already been removed from server`)\n      })\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n    else {\n      personService\n      .create(personObject)\n      .then(response => personService\n        .getAll()\n        .then(allPersons => {\n          setPersons(allPersons)\n        }),\n\n        setNewName(''),\n        setNewNumber(''),\n        setNotificationMessage(`Added ${personObject.name}`),\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      )\n    }\n  }\n\n  const deletePerson = (person) => {\n    window.confirm(`Delete ${person.name} ?`)\n    personService\n    .deleteRecord(person.id)\n    .then(response => {\n      setPersons(persons.filter(p => p.id !== person.id))\n    })\n    .catch(error => {\n      setMessageType(\"error\")\n      setNotificationMessage(`Information for ${person.name} has already been removed from server`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearchName(event.target.value)\n  }\n\n  useEffect(() => {\n    const results = persons.filter(person =>\n      person.name.toLowerCase().includes(newSearchName.toLowerCase()));\n      setSearchResults(results)\n  }, [persons,newSearchName]);\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification messageType={messageType} message={notificationMessage} />\n      <Filter\n        newSearchName={newSearchName}\n        handleSearchChange={handleSearchChange}\n      />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}  />\n      <h2>Numbers</h2>\n      <Persons searchResults={searchResults} deletePerson={deletePerson} />\n    </div>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}